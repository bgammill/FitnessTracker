// <auto-generated />
using System;
using FitnessTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessTracker.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("FitnessTracker.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("FitnessTracker.Models.ExerciseLogEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExerciseId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("ExerciseLogEntry");
                });

            modelBuilder.Entity("FitnessTracker.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("FitnessTracker.Models.FoodLogEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FoodId");

                    b.Property<double>("ServingAmount");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("UserId");

                    b.ToTable("FoodLogEntry");
                });

            modelBuilder.Entity("FitnessTracker.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTimestamp");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("FitnessTracker.Models.HeightLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Height");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HeightLogEntry");
                });

            modelBuilder.Entity("FitnessTracker.Models.Muscle", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExerciseId");

                    b.Property<int?>("ExerciseId1");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ExerciseId1");

                    b.ToTable("Muscle");
                });

            modelBuilder.Entity("FitnessTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessTracker.Models.WeightLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("UserId");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("FitnessTracker.Models.ExerciseLogEntry", b =>
                {
                    b.HasOne("FitnessTracker.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId");

                    b.HasOne("FitnessTracker.Models.User", "User")
                        .WithMany("Exercises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessTracker.Models.FoodLogEntry", b =>
                {
                    b.HasOne("FitnessTracker.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId");

                    b.HasOne("FitnessTracker.Models.User")
                        .WithMany("Foods")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FitnessTracker.Models.Goal", b =>
                {
                    b.HasOne("FitnessTracker.Models.User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FitnessTracker.Models.HeightLogEntry", b =>
                {
                    b.HasOne("FitnessTracker.Models.User")
                        .WithMany("Heights")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FitnessTracker.Models.Muscle", b =>
                {
                    b.HasOne("FitnessTracker.Models.Exercise")
                        .WithMany("PrimaryMuscleGroups")
                        .HasForeignKey("ExerciseId");

                    b.HasOne("FitnessTracker.Models.Exercise")
                        .WithMany("SecondaryMuscleGroups")
                        .HasForeignKey("ExerciseId1");
                });

            modelBuilder.Entity("FitnessTracker.Models.WeightLogEntry", b =>
                {
                    b.HasOne("FitnessTracker.Models.User", "User")
                        .WithMany("Weights")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
